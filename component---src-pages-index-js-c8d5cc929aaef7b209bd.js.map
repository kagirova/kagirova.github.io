{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/index.js"],"names":["layout","_ref","children","Object","core_browser_esm","style","margin","maxWidth","Helmet","name","content","__webpack_exports__","data","backgroundColor","width","height","borderRadius","marginLeft","marginRight","alt","marginTop","src","logo","publicURL","textAlign","lineHeight","padding","className","fontSize","site","siteMetadata","social","map","soc","index","icon","icons","edges","filter","i","node","target","rel","href","link","display","key","marginBottom","allInstaNode","sort","a","b","timestamp","insta","id","gatsby_image_default","fluid","localFile","childImageSharp","role","aria-label","query"],"mappings":"oKAGeA,EAAA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAO,CAAEC,OAAM,YAAeC,SAAU,MAC3CJ,OAAAC,EAAA,EAAAD,CAACK,EAAA,OAAD,KACEL,OAAAC,EAAA,EAAAD,CAAA,+BAGAA,OAAAC,EAAA,EAAAD,CAAA,QAAMM,KAAK,cAAcC,QAAQ,kIACjCP,OAAAC,EAAA,EAAAD,CAAA,QAAMM,KAAK,WAAWC,QAAQ,kCAE/BR,wCCPUS,EAAA,iBAAAV,GAAA,IAAGW,EAAHX,EAAGW,KAAH,OACbT,OAAAC,EAAA,EAAAD,CAACH,EAAD,KACEG,OAAAC,EAAA,EAAAD,CAAA,cACEA,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAO,CAAEQ,gBAAe,UAAaC,MAAO,IAAKC,OAAQ,IAAKC,aAAY,MAASC,WAAU,OAAUC,YAAW,SACrHf,OAAAC,EAAA,EAAAD,CAAA,OAAKgB,IAAI,GAAGd,MAAO,CAAEe,UAAW,GAAIH,WAAW,IAAMI,IAAKT,EAAKU,KAAKC,cAGxEpB,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAO,CAAEmB,UAAS,SAAYC,WAAU,QAAWC,QAAS,KAAjE,cACavB,OAAAC,EAAA,EAAAD,CAAA,QAAMwB,UAAU,cAAhB,kBAAkDxB,OAAAC,EAAA,EAAAD,CAAA,WAD/D,8CAC+GA,OAAAC,EAAA,EAAAD,CAAA,QAAMwB,UAAU,cAAhB,YAA4CxB,OAAAC,EAAA,EAAAD,CAAA,WAD3J,kBAC+KA,OAAAC,EAAA,EAAAD,CAAA,QAAOwB,UAAU,cAAjB,cAD/K,kBAC6OxB,OAAAC,EAAA,EAAAD,CAAA,QAAOwB,UAAU,cAAjB,WAE7OxB,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAO,CAAEY,WAAU,OAASC,YAAW,OAASX,SAAS,MAC5DJ,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAO,CAAEuB,SAAQ,QAAWJ,UAAS,WAA1C,aACArB,OAAAC,EAAA,EAAAD,CAAA,WACES,EAAKiB,KAAKC,aAAaC,OAAOC,IAAI,SAACC,EAAKC,GACxC,IAAIC,EAAOvB,EAAKwB,MAAMC,MAAMC,OAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAK/B,OAASwB,EAAIxB,OAAM,GAClE,OACCN,OAAAC,EAAA,EAAAD,CAAA,KAAGsC,OAAO,SAASC,IAAI,sBAAsBC,KAAMV,EAAIW,KAAMvC,MAAO,CAAEwC,QAAO,gBAAoBC,IAAKZ,GACrG/B,OAAAC,EAAA,EAAAD,CAAA,OAAKgB,IAAI,GAAGE,IAAKc,EAAKK,KAAKjB,UAAWlB,MAAO,CAAEwC,QAAO,QAAWE,aAAc,UAMrF5C,OAAAC,EAAA,EAAAD,CAAA,OAAKwB,UAAU,4BACZf,EAAKoC,aAAaX,MAChBY,KAAK,SAACC,EAAEC,GAAH,OAASA,EAAEX,KAAKY,UAAYF,EAAEV,KAAKY,YACxCpB,IAAI,SAACqB,EAAOnB,GAAR,OACL/B,OAAAC,EAAA,EAAAD,CAAA,OAAKwB,UAAU,aAAamB,IAAKZ,GAC/B/B,OAAAC,EAAA,EAAAD,CAAA,KAAGsC,OAAO,SAASC,IAAI,sBAAsBC,KAAI,+BAAiCU,EAAMb,KAAKc,GAA5C,KAC/CnD,OAAAC,EAAA,EAAAD,CAACoD,EAAAL,EAAD,CAAKM,MAAOH,EAAMb,KAAKiB,UAAUC,gBAAgBF,aAKzDrD,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAO,CAAEmB,UAAS,WACrBrB,OAAAC,EAAA,EAAAD,CAAA,QAAMwD,KAAK,MAAMC,aAAW,SAA5B,aAnCS,IAwCFC,EAAK","file":"component---src-pages-index-js-c8d5cc929aaef7b209bd.js","sourcesContent":["import React from \"react\"\nimport {Helmet} from \"react-helmet\";\n\nexport default ({ children }) => (\n  <div style={{ margin: `3rem auto`, maxWidth: 900 }}>\n    <Helmet>\n      <title>\n        Maria Kagirova\n      </title>\n      <meta name=\"description\" content=\"My name is Maria Kagirova. I am a creative person focused on handmade ceramics. I also create watercolor paintings and design\" />\n      <meta name=\"keywords\" content=\"handmade ceramics,watercolor\" />\n    </Helmet>\n    {children}\n  </div>\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => (\n  <Layout>\n    <header>\n      <div style={{ backgroundColor: `#f894bc`, width: 100, height: 100, borderRadius: `50%`, marginLeft: `auto`, marginRight: `auto` }}>\n        <img alt=\"\" style={{ marginTop: 20, marginLeft:15 }} src={data.logo.publicURL} />\n      </div>\n    </header>\n    <div style={{ textAlign: `center`, lineHeight: `1.5em`, padding: 20 }}>\n      My name is <span className=\"king-basil\">Maria Kagirova</span><br/>I am a creative person focused on handmade <span className=\"king-basil\">ceramics</span><br/> I also create <span  className=\"king-basil\">watercolor</span> paintings and <span  className=\"king-basil\">design</span>\n    </div>\n    <div style={{ marginLeft:`auto`, marginRight:`auto`, maxWidth:100 }}>\n      <div style={{ fontSize: `0.7em`, textAlign: `center` }}>follow me</div>\n      <div>\n       {data.site.siteMetadata.social.map((soc, index) => {\n        let icon = data.icons.edges.filter(i => i.node.name === soc.name)[0];\n        return (\n         <a target=\"_blank\" rel=\"noopener noreferrer\" href={soc.link} style={{ display: `inline-block` }} key={index}>\n          <img alt=\"\" src={icon.node.publicURL} style={{ display: `block`, marginBottom: 0 }}/>\n         </a>\n        );\n       })}\n      </div>\n    </div>\n    <div className=\"clearfix insta-container\">\n      {data.allInstaNode.edges\n        .sort((a,b) => b.node.timestamp - a.node.timestamp)\n        .map((insta, index) => (\n        <div className=\"insta-node\" key={index}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.instagram.com/p/${insta.node.id}/`}>\n            <Img fluid={insta.node.localFile.childImageSharp.fluid} />\n          </a>\n        </div>\n      ))}\n    </div>\n    <div style={{ textAlign: `center` }}>\n      <span role=\"img\" aria-label=\"hello\">❤️❤️❤️</span>\n    </div>\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        social {\n          name\n          link\n        }\n      }\n    }\n    instaNode {\n      username\n    }\n    allInstaNode(limit: 12) {\n      edges {\n        node {\n          id\n          timestamp\n          localFile {\n            childImageSharp {\n              fluid(quality:100, maxWidth: 140, maxHeight: 140) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n    icons: allFile(filter: {relativeDirectory: {eq: \"files/icons\"} }) {\n      edges {\n        node {\n          name\n          publicURL\n        }\n      }\n    }\n    logo: file(name: {eq: \"logo\"}) {\n    \tpublicURL\n    }\n  }\n`\n"],"sourceRoot":""}